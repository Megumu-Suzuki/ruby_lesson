## 10進数以外の整数リテラル
# 2進数(0b)
0b11111111 #=>255
# 8進数(0)
0377 #=>255
# 16進数(0x)
0xff #=>255

## ビット演算　1を真、0を偽とする
# ~:ビット反転 1と0が入れ替わり、-がついて最後に1を付け加える
(~0b1010).to_s(2) #=>"-1011"
# &:ビット積　どちらも真なら真を出力
(0b1010 & 0b1100).to_s(2) #=>"1000"
# |:ビット和　どちらかが真なら真を出力
(0b1010 | 0b1100).to_s(2) #=>"1110"
# ^:排他的論理和　どちらか一方のみが真なら真を出力　※両方真は偽
(0b1010 ^ 0b1100).to_s(2) #=>"110" 最初の0は変わらないので表示されないみたい #=>"0110"
# >>:右ビットシフト 右にシフトする
(0b1010 >> 1).to_s(2) #=>"101" (#=>0101)
# <<:左ビットシフト 左にシフトする
(0b1010 << 1).to_s(2) #=>"10100"

## 指数表現
2e-3 #=> 0.002